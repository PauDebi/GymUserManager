/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Frames;

import Logica.Logica;
import com.formdev.flatlaf.FlatDarkLaf;
import com.formdev.flatlaf.FlatLightLaf;
import java.awt.BorderLayout;
import java.awt.Desktop;
import java.awt.Image;
import java.io.File;
import java.io.IOException;
import java.net.URI;
import java.net.URISyntaxException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JTable;
import javax.swing.SwingUtilities;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import uk.co.caprica.vlcj.player.component.EmbeddedMediaPlayerComponent;

/**
 *
 * @author Pau_Clase
 */
public class MainFrame extends javax.swing.JFrame {
    private EmbeddedMediaPlayerComponent mediaPlayerComponente = new EmbeddedMediaPlayerComponent();
    private Boolean isLoged = false;
    private StringBuilder changeColor = new StringBuilder();
    private ArrayList<File> videos = Logica.readVideos();
    

    /**
     * Creates new form MainFrame
     */
    public MainFrame() {
        initComponents();
        Logica.addAcctionListenerTable(tablaIntentos, mediaPlayerComponente, videos, this, videoPlayerPanel);
        setLogedState(false); 
        prepareVideoPlayer();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainLogo = new javax.swing.JLabel();
        urlLabel = new javax.swing.JLabel();
        loginLogo = new javax.swing.JLabel();
        videoPlayerPanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaIntentos = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        userList = new javax.swing.JList<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("GymUserManager");
        setResizable(false);
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formKeyPressed(evt);
            }
        });
        getContentPane().setLayout(null);

        mainLogo.setIcon(new javax.swing.ImageIcon("./Archivos/GymLogo2.png"));
        getContentPane().add(mainLogo);
        mainLogo.setBounds(420, 160, 370, 300);

        urlLabel.setText("User Manager");
        urlLabel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        urlLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                urlLabelMouseClicked(evt);
            }
        });
        getContentPane().add(urlLabel);
        urlLabel.setBounds(1090, 550, 80, 20);

        ImageIcon icono = new javax.swing.ImageIcon("./Archivos/Login.png");

        Image escalada = icono.getImage().getScaledInstance(75, 75, Image.SCALE_SMOOTH);
        loginLogo.setIcon(new ImageIcon(escalada));
        loginLogo.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        loginLogo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                loginLogoMouseClicked(evt);
            }
        });
        getContentPane().add(loginLogo);
        loginLogo.setBounds(1100, 0, 90, 80);

        videoPlayerPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("VideoPlayer"));

        javax.swing.GroupLayout videoPlayerPanelLayout = new javax.swing.GroupLayout(videoPlayerPanel);
        videoPlayerPanel.setLayout(videoPlayerPanelLayout);
        videoPlayerPanelLayout.setHorizontalGroup(
            videoPlayerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 490, Short.MAX_VALUE)
        );
        videoPlayerPanelLayout.setVerticalGroup(
            videoPlayerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 287, Short.MAX_VALUE)
        );

        getContentPane().add(videoPlayerPanel);
        videoPlayerPanel.setBounds(50, 240, 500, 310);

        tablaIntentos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Usuario", "Exercici", "Fecha", "VideoFile", "Temp"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tablaIntentos);
        if (tablaIntentos.getColumnModel().getColumnCount() > 0) {
            tablaIntentos.getColumnModel().getColumn(0).setResizable(false);
            tablaIntentos.getColumnModel().getColumn(1).setResizable(false);
            tablaIntentos.getColumnModel().getColumn(2).setResizable(false);
            tablaIntentos.getColumnModel().getColumn(3).setResizable(false);
        }

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(590, 80, 490, 470);

        userList.setBorder(javax.swing.BorderFactory.createTitledBorder("Usuarios"));
        userList.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                userListKeyPressed(evt);
            }
        });
        userList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                userListValueChanged(evt);
            }
        });
        jScrollPane3.setViewportView(userList);

        getContentPane().add(jScrollPane3);
        jScrollPane3.setBounds(40, 20, 150, 200);

        setBounds(0, 0, 1206, 642);
    }// </editor-fold>//GEN-END:initComponents

    
    private void prepareVideoPlayer(){
        videoPlayerPanel.setLayout(new BorderLayout());
        videoPlayerPanel.add(mediaPlayerComponente, BorderLayout.CENTER); // Agrega mediaPlayerComponente al panel
        videoPlayerPanel.revalidate(); // Refresca el panel para que muestre el reproductor
        videoPlayerPanel.repaint();
    }
    private void urlLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_urlLabelMouseClicked
        try {
            Desktop.getDesktop().browse(new URI("https://github.com/PauDebi/GymUserManager"));
        } catch (URISyntaxException|IOException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_urlLabelMouseClicked

    private void loginLogoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_loginLogoMouseClicked
        if (isLoged)   
            setLogedState(false);
        else
            new LogingDialog(this);
    }//GEN-LAST:event_loginLogoMouseClicked

    private void userListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_userListValueChanged
        if (!evt.getValueIsAdjusting()) { // Para evitar eventos duplicados
            String selectedClient = userList.getSelectedValue();
            if (selectedClient != null) {
                String[] parts = selectedClient.split(":");
                String clientId = parts[1];

                Logica.updateTable(Integer.parseInt(clientId), tablaIntentos);
            }
        }
    }//GEN-LAST:event_userListValueChanged

    //Desceleccoionar la lista de usuarios al pulsar esc
    private void userListKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_userListKeyPressed
        if (evt.getKeyCode() == 27){
            userList.clearSelection();
            Logica.updateTable(tablaIntentos);
            this.setFocusable(true);
        }
    }//GEN-LAST:event_userListKeyPressed

    //Cabmiar look and feel si se escribe white || black
    private void formKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyPressed
        // Acumula caracteres si es letra o espacio
        if (Character.isLetter(evt.getKeyChar()) || Character.isWhitespace(evt.getKeyChar())) {
            changeColor.append(evt.getKeyChar());

            // Verifica si la palabra acumulada coincide con una palabra clave
            String palabra = changeColor.toString();
            if (palabra.endsWith("white")) {
                cambiarColorWhite(); // Método que cambia el color o realiza alguna acción
                changeColor.setLength(0); // Limpia el acumulador si es necesario
            }
            if (palabra.endsWith("black")) {
                cambiarColorBlack(); // Método que cambia el color o realiza alguna acción
                changeColor.setLength(0); // Limpia el acumulador si es necesario
            }
        }
    }//GEN-LAST:event_formKeyPressed
    
    public void cambiarColorWhite(){
        try {
            UIManager.setLookAndFeel(new FlatLightLaf());
            SwingUtilities.updateComponentTreeUI(this);
        } catch (UnsupportedLookAndFeelException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
     public void cambiarColorBlack(){
        try {
            UIManager.setLookAndFeel(new FlatDarkLaf());
            SwingUtilities.updateComponentTreeUI(this);
        } catch (UnsupportedLookAndFeelException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    
    
    public void setLogedState(boolean loged) {
        isLoged = loged;

        updateVisibility(loged);
        

        // Solo actualizamos la tabla y la lista de clientes si estamos logueados
        if (loged) {
            Logica.updateTable(tablaIntentos);
            Logica.updateClientList(userList);
        }
    }

    private void updateVisibility(boolean loged) {
        mainLogo.setVisible(!loged);
        urlLabel.setVisible(!loged);
        jScrollPane1.setVisible(loged);
        videoPlayerPanel.setVisible(loged);
        //mediaPlayer.setVisible(loged);
        jScrollPane3.setVisible(loged);
    }

    public JTable getTablaIntentos() {
        return tablaIntentos;
    }
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        try {
            UIManager.setLookAndFeel(new FlatDarkLaf());
        } catch (UnsupportedLookAndFeelException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel loginLogo;
    private javax.swing.JLabel mainLogo;
    private javax.swing.JTable tablaIntentos;
    private javax.swing.JLabel urlLabel;
    private javax.swing.JList<String> userList;
    private javax.swing.JPanel videoPlayerPanel;
    // End of variables declaration//GEN-END:variables
}

